{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 1,
    "pending": 0,
    "failures": 2,
    "start": "2019-01-30T16:06:59.371Z",
    "end": "2019-01-30T16:06:59.471Z",
    "duration": 100,
    "testsRegistered": 3,
    "passPercent": 33.3,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "danger",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "113d90bf-7bcf-476a-9970-5ac797e3f0ef",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "49244ce2-3380-481a-9968-e2d4126acecb",
        "title": "Test Mocha with Functional NodeJS",
        "fullFile": "/Users/caiomajdalani/Documents/Workspaces/backend/moip-technical-challenge/src/tests/index.js",
        "file": "/src/tests/index.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "GET",
            "fullTitle": "Test Mocha with Functional NodeJS GET",
            "timedOut": false,
            "duration": 58,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "{\n  \"title\": \"Request Parameters\",\n  \"value\": {\n    \"URL\": \"http://localhost:5000/payments\",\n    \"Method\": \"get\",\n    \"Headers\": {},\n    \"Body\": {},\n    \"HttpCodeExpect\": 200,\n    \"Response\": {\n      \"status\": 200,\n      \"message\": \"OK\"\n    }\n  }\n}",
            "code": "var test = this\nhttp('get', 'payments', {}, {}, 200)\n    .end((err, res) => {\n        expect(res.body.message).to.equal(`OK`)\n        reporter(test, 'get', 'payments', {}, {}, 200, (res ? res.body : err))\n        done(err)\n    })",
            "err": {},
            "isRoot": false,
            "uuid": "9fad351b-03f5-48c6-bc4f-3c96d229d75a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "POST - Boleto",
            "fullTitle": "Test Mocha with Functional NodeJS POST - Boleto",
            "timedOut": false,
            "duration": 24,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "context": "{\n  \"title\": \"Request Parameters\",\n  \"value\": {\n    \"URL\": \"http://localhost:5000/payments\",\n    \"Method\": \"get\",\n    \"Headers\": {},\n    \"Body\": {\n      \"buyer\": {\n        \"name\": \"Lenora Jacobson DVM\",\n        \"email\": \"Velma83@hotmail.com\",\n        \"cpf\": \"11164733525\"\n      },\n      \"date\": \"2019-01-22T10:19:27.077Z\",\n      \"payment\": {\n        \"amount\": 1820,\n        \"type\": \"boleto\",\n        \"card\": null\n      }\n    },\n    \"HttpCodeExpect\": 201,\n    \"Response\": {\n      \"status\": 409,\n      \"message\": \"CONFLICT\",\n      \"result\": \"This CPF is not valid.\"\n    }\n  }\n}",
            "code": "var test = this\n    , body = _mapBody('boleto')\nhttp('post', 'payments', {}, body, 201)\n    .end((err, res) => {\n        // expect(res.body.message).to.equal(`OK`)\n        reporter(test, 'get', 'payments', {}, body, 201, (res ? res.body : err))\n        done(err)\n    })",
            "err": {
              "message": "Error: expected 201 \"Created\", got 409 \"Conflict\"",
              "estack": "Error: expected 201 \"Created\", got 409 \"Conflict\"\n    at Test._assertStatus (node_modules/supertest/lib/test.js:268:12)\n    at Test._assertFunction (node_modules/supertest/lib/test.js:283:11)\n    at Test.assert (node_modules/supertest/lib/test.js:173:18)\n    at localAssert (node_modules/supertest/lib/test.js:131:12)\n    at /Users/caiomajdalani/Documents/Workspaces/backend/moip-technical-challenge/node_modules/supertest/lib/test.js:128:5\n    at Test.Request.callback (node_modules/superagent/lib/node/index.js:728:3)\n    at parser (node_modules/superagent/lib/node/index.js:916:18)\n    at IncomingMessage.res.on (node_modules/superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (_stream_readable.js:1091:14)\n    at process._tickCallback (internal/process/next_tick.js:174:19)"
            },
            "isRoot": false,
            "uuid": "a0f58a22-429d-4b5a-8b6d-84665a9640e0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "POST - Credit",
            "fullTitle": "Test Mocha with Functional NodeJS POST - Credit",
            "timedOut": false,
            "duration": 7,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "context": "{\n  \"title\": \"Request Parameters\",\n  \"value\": {\n    \"URL\": \"http://localhost:5000/payments\",\n    \"Method\": \"get\",\n    \"Headers\": {},\n    \"Body\": {\n      \"buyer\": {\n        \"name\": \"Jayne Torp\",\n        \"email\": \"Hiram11@yahoo.com\",\n        \"cpf\": \"45177389512\"\n      },\n      \"date\": \"2019-01-26T08:54:11.807Z\",\n      \"payment\": {\n        \"amount\": 8503,\n        \"type\": \"credit\",\n        \"card\": {\n          \"brand\": \"visa\",\n          \"owner\": \"Ms. Julius Tromp\",\n          \"number\": \"3123634841797070\",\n          \"expiration\": \"01/2022\",\n          \"bin\": \"959\"\n        }\n      }\n    },\n    \"HttpCodeExpect\": 201,\n    \"Response\": {\n      \"status\": 409,\n      \"message\": \"CONFLICT\",\n      \"result\": \"This CPF is not valid.\"\n    }\n  }\n}",
            "code": "var test = this\n    , body = _mapBody('credit')\nhttp('post', 'payments', {}, body, 201)\n    .end((err, res) => {\n        // expect(res.body.message).to.equal(`OK`)\n        reporter(test, 'get', 'payments', {}, body, 201, (res ? res.body : err))\n        done(err)\n    })",
            "err": {
              "message": "Error: expected 201 \"Created\", got 409 \"Conflict\"",
              "estack": "Error: expected 201 \"Created\", got 409 \"Conflict\"\n    at Test._assertStatus (node_modules/supertest/lib/test.js:268:12)\n    at Test._assertFunction (node_modules/supertest/lib/test.js:283:11)\n    at Test.assert (node_modules/supertest/lib/test.js:173:18)\n    at localAssert (node_modules/supertest/lib/test.js:131:12)\n    at /Users/caiomajdalani/Documents/Workspaces/backend/moip-technical-challenge/node_modules/supertest/lib/test.js:128:5\n    at Test.Request.callback (node_modules/superagent/lib/node/index.js:728:3)\n    at parser (node_modules/superagent/lib/node/index.js:916:18)\n    at IncomingMessage.res.on (node_modules/superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (_stream_readable.js:1091:14)\n    at process._tickCallback (internal/process/next_tick.js:174:19)"
            },
            "isRoot": false,
            "uuid": "03e1e2b5-4be8-4b19-9a24-7ea42590f31f",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "9fad351b-03f5-48c6-bc4f-3c96d229d75a"
        ],
        "failures": [
          "a0f58a22-429d-4b5a-8b6d-84665a9640e0",
          "03e1e2b5-4be8-4b19-9a24-7ea42590f31f"
        ],
        "pending": [],
        "skipped": [],
        "duration": 89,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2019
}