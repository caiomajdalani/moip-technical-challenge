{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2019-01-30T15:36:37.880Z",
    "end": "2019-01-30T15:36:37.913Z",
    "duration": 33,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "77330f09-37ba-4dd1-9d76-e751af9bd356",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "1cf47db6-e3f5-41e1-84ae-a0437515b685",
        "title": "Test Mocha with Functional NodeJS",
        "fullFile": "/Users/caiomajdalani/Documents/Workspaces/backend/moip-technical-challenge/src/tests/index.js",
        "file": "/src/tests/index.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "GET",
            "fullTitle": "Test Mocha with Functional NodeJS GET",
            "timedOut": false,
            "duration": 12,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "{\n  \"title\": \"Request Parameters\",\n  \"value\": {\n    \"URL\": \"http://localhost:5000/payments\",\n    \"Method\": \"get\",\n    \"Headers\": {},\n    \"Body\": {},\n    \"HttpCodeExpect\": 200\n  }\n}",
            "code": "var test = this\nreporter(test, 'get', 'payments', {}, {}, 200)\nhttp('get', 'payments', {}, {}, 200)\n    .then(res => {\n        expect(res.body.message).to.equal(`OK`)\n    })\n    .catch(err => {\n        throw err\n    })",
            "err": {},
            "isRoot": false,
            "uuid": "01db641c-8ac4-4948-9b03-99d1fcbecf0f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "POST - Boleto",
            "fullTitle": "Test Mocha with Functional NodeJS POST - Boleto",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "{\n  \"title\": \"Request Parameters\",\n  \"value\": {\n    \"URL\": \"http://localhost:5000/payments\",\n    \"Method\": \"post\",\n    \"Headers\": {},\n    \"Body\": {\n      \"buyer\": {\n        \"cpf\": \"49898300701\"\n      },\n      \"date\": null,\n      \"payment\": {\n        \"amount\": 9877,\n        \"type\": \"boleto\",\n        \"card\": null\n      }\n    },\n    \"HttpCodeExpect\": 201\n  }\n}",
            "code": "var test = this\n    , body = _mapBody('boleto')\nreporter(test, 'post', 'payments', {}, body, 201)\nhttp('post', 'payments', {}, body, 201)",
            "err": {},
            "isRoot": false,
            "uuid": "15c3ba9c-b61c-473e-b016-be4b009c7dd1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "POST - Credit",
            "fullTitle": "Test Mocha with Functional NodeJS POST - Credit",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "{\n  \"title\": \"Request Parameters\",\n  \"value\": {\n    \"URL\": \"http://localhost:5000/payments\",\n    \"Method\": \"post\",\n    \"Headers\": {},\n    \"Body\": {\n      \"buyer\": {\n        \"cpf\": \"53240141709\"\n      },\n      \"date\": null,\n      \"payment\": {\n        \"amount\": 9320,\n        \"type\": \"credit\",\n        \"card\": {\n          \"brand\": \"visa\",\n          \"number\": \"7331189167672593\",\n          \"expiration\": \"01/2022\",\n          \"bin\": \"510\"\n        }\n      }\n    },\n    \"HttpCodeExpect\": 201\n  }\n}",
            "code": "var test = this\n    , body = _mapBody('credit')\nreporter(test, 'post', 'payments', {}, body, 201)\nhttp('post', 'payments', {}, body, 201)",
            "err": {},
            "isRoot": false,
            "uuid": "5f9985b5-52f1-444c-938f-2d1d12d746c9",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "01db641c-8ac4-4948-9b03-99d1fcbecf0f",
          "15c3ba9c-b61c-473e-b016-be4b009c7dd1",
          "5f9985b5-52f1-444c-938f-2d1d12d746c9"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 15,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2019
}